import streamlit as st
import requests
import pandas as pd
from ta.momentum import RSIIndicator

# Merr API Key nga secrets
API_KEY = st.secrets["COINGECKO_API_KEY"]

# Funksioni pÃ«r tÃ« marrÃ« tÃ« dhÃ«nat historike tÃ« monedhÃ«s
def get_coin_data(coin_id):
    url = f"https://api.coingecko.com/api/v3/coins/{coin_id}/market_chart"
    headers = {
        "accept": "application/json",
        "x-cg-api-key": API_KEY
    }
    params = {
        "vs_currency": "usd",
        "days": "7",
        "interval": "hourly"
    }
    response = requests.get(url, headers=headers, params=params)
    if response.status_code == 200:
        data = response.json()
        prices = data["prices"]
        df = pd.DataFrame(prices, columns=["timestamp", "price"])
        df["timestamp"] = pd.to_datetime(df["timestamp"], unit='ms')
        df.set_index("timestamp", inplace=True)
        return df
    else:
        st.error(f"Gabim {response.status_code}: Nuk u morÃ«n tÃ« dhÃ«nat.")
        return None

# Vizualizimi i Ã§mimit dhe RSI
def show_dashboard(coin_id, coin_name):
    st.title(f"{coin_name} ðŸ“Š RSI & Ã‡mimi")
    
    df = get_coin_data(coin_id)
    if df is not None:
        # Llogarit RSI
        rsi = RSIIndicator(close=df["price"]).rsi()
        df["RSI"] = rsi
        
        # Shfaq grafikÃ«t
        st.subheader("ðŸ“ˆ Grafiku i Ã‡mimit")
        st.line_chart(df["price"])

        st.subheader("ðŸ“‰ RSI (Relative Strength Index)")
        st.line_chart(df["RSI"])

        # Shfaq Ã§mimin e fundit
        latest_price = df["price"].iloc[-1]
        latest_rsi = df["RSI"].iloc[-1]
        st.metric("Ã‡mimi i fundit", f"${latest_price:,.2f}")
        st.metric("RSI i fundit", f"{latest_rsi:.2f}")

# Zgjedhje nga pÃ«rdoruesi
coin_map = {
    "Bitcoin": "bitcoin",
    "Ethereum": "ethereum",
    "XRP": "ripple"
}
coin_name = st.selectbox("ðŸª™ Zgjidh monedhÃ«n", list(coin_map.keys()))
show_dashboard(coin_map[coin_name], coin_name)
