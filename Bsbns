import streamlit as st
import requests
import pandas as pd
from ta.momentum import RSIIndicator

# Merr API Key nga secrets
API_KEY = st.secrets["COINGECKO_API_KEY"]

# Funksioni pÃ«r tÃ« marrÃ« tÃ« dhÃ«nat historike
def get_coin_data(coin_id):
    url = f"https://api.coingecko.com/api/v3/coins/{coin_id}/market_chart"
    headers = {
        "accept": "application/json",
        "x-cg-api-key": API_KEY
    }
    params = {
        "vs_currency": "usd",
        "days": "7",
        "interval": "hourly"
    }
    response = requests.get(url, headers=headers, params=params)
    if response.status_code == 200:
        data = response.json()
        prices = data["prices"]
        df = pd.DataFrame(prices, columns=["timestamp", "price"])
        df["timestamp"] = pd.to_datetime(df["timestamp"], unit='ms')
        df.set_index("timestamp", inplace=True)
        return df
    else:
        st.error(f"Gabim {response.status_code}: Nuk u morÃ«n tÃ« dhÃ«nat.")
        return None

# Funksioni pÃ«r dashboardin
def show_dashboard(coin_id, coin_name):
    st.title(f"{coin_name} ğŸ“Š RSI & Ã‡mimi")

    df = get_coin_data(coin_id)
    if df is not None:
        df["RSI"] = RSIIndicator(close=df["price"]).rsi()

        # Shfaq grafikun e Ã§mimit
        st.subheader("ğŸ“ˆ Ã‡mimi")
        st.line_chart(df["price"])

        # Shfaq grafikun e RSI
        st.subheader("ğŸ“‰ RSI")
        st.line_chart(df["RSI"])

        # Sinjal RSI
        latest_rsi = df["RSI"].iloc[-1]
        if latest_rsi > 70:
            st.warning(f"RSI: {latest_rsi:.2f} â†’ **Overbought**! Mund tÃ« bie.")
        elif latest_rsi < 30:
            st.success(f"RSI: {latest_rsi:.2f} â†’ **Oversold**! Mund tÃ« rritet.")
        else:
            st.info(f"RSI: {latest_rsi:.2f} â†’ **Neutral**.")

        # Ã‡mimi i fundit
        latest_price = df["price"].iloc[-1]
        st.metric("Ã‡mimi i fundit", f"${latest_price:,.2f}")

# Zgjedhja e monedhÃ«s
coin_map = {
    "Bitcoin (BTC)": "bitcoin",
    "Ethereum (ETH)": "ethereum",
    "XRP": "ripple",
    "PEPE": "pepe",
    "Shiba Inu": "shiba-inu",
    "XVG (Verge)": "verge"
}

coin_name = st.selectbox("ğŸª™ Zgjidh monedhÃ«n", list(coin_map.keys()))
show_dashboard(coin_map[coin_name], coin_name)
